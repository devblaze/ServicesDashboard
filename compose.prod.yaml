services:
  database:
    image: postgres:16
    environment:
      POSTGRES_DB: servicesdashboard
      POSTGRES_USER: ${DB_USER:-admin}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-admin123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-admin} -d servicesdashboard"]
      interval: 30s
      timeout: 10s
      retries: 3

  servicesdashboard:
    image: ${DOCKER_USERNAME:-yourusername}/servicesdashboard-backend:${VERSION:-latest}
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=database;Database=servicesdashboard;Username=${DB_USER:-admin};Password=${DB_PASSWORD:-admin123}
      - AppSettings__DefaultOllamaBaseUrl=${OLLAMA_URL:-http://host.docker.internal:11434}
    networks:
      - app_network
    depends_on:
      database:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    image: ${DOCKER_USERNAME:-yourusername}/servicesdashboard-frontend:${VERSION:-latest}
    ports:
      - "${APP_PORT:-5050}:80"
    networks:
      - app_network
    depends_on:
      servicesdashboard:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
