name: Build and Push Docker Images

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag (e.g., v1.0.0)'
        required: true
        default: 'latest'

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}

jobs:
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract version from tag
        id: version
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION="${GITHUB_REF#refs/tags/}"
          fi
          VERSION_NUMBER="${VERSION#v}"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "version_number=$VERSION_NUMBER" >> $GITHUB_OUTPUT
          echo "Version: $VERSION"
          echo "Version Number: $VERSION_NUMBER"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Enable Corepack
        run: corepack enable

      - name: Install frontend dependencies
        working-directory: ./services-dashboard-frontend
        run: yarn install --frozen-lockfile

      - name: Build frontend
        working-directory: ./services-dashboard-frontend
        run: yarn build

      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./ServicesDashboard
          file: ./ServicesDashboard/Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/servicesdashboard-backend:${{ steps.version.outputs.version_number }}
            ${{ secrets.DOCKER_USERNAME }}/servicesdashboard-backend:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/servicesdashboard-backend:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/servicesdashboard-backend:buildcache,mode=max

      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./services-dashboard-frontend
          file: ./services-dashboard-frontend/Dockerfile.prod
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/servicesdashboard-frontend:${{ steps.version.outputs.version_number }}
            ${{ secrets.DOCKER_USERNAME }}/servicesdashboard-frontend:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/servicesdashboard-frontend:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/servicesdashboard-frontend:buildcache,mode=max

      - name: Image digest
        run: |
          echo "Backend image pushed successfully!"
          echo "Frontend image pushed successfully!"
          echo "Version: ${{ steps.version.outputs.version }}"
          echo ""
          echo "To use these images, set in your .env file:"
          echo "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}"
          echo "VERSION=${{ steps.version.outputs.version_number }}"
